// Generated by view binder compiler. Do not edit!
package com.example.terraceties.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.terraceties.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TeamLeagueCardBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView gd;

  @NonNull
  public final TextView mp;

  @NonNull
  public final TextView pos;

  @NonNull
  public final TextView pts;

  @NonNull
  public final TextView team;

  @NonNull
  public final LinearLayout teamCard;

  private TeamLeagueCardBinding(@NonNull CardView rootView, @NonNull TextView gd,
      @NonNull TextView mp, @NonNull TextView pos, @NonNull TextView pts, @NonNull TextView team,
      @NonNull LinearLayout teamCard) {
    this.rootView = rootView;
    this.gd = gd;
    this.mp = mp;
    this.pos = pos;
    this.pts = pts;
    this.team = team;
    this.teamCard = teamCard;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static TeamLeagueCardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TeamLeagueCardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.team_league_card, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TeamLeagueCardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.gd;
      TextView gd = ViewBindings.findChildViewById(rootView, id);
      if (gd == null) {
        break missingId;
      }

      id = R.id.mp;
      TextView mp = ViewBindings.findChildViewById(rootView, id);
      if (mp == null) {
        break missingId;
      }

      id = R.id.pos;
      TextView pos = ViewBindings.findChildViewById(rootView, id);
      if (pos == null) {
        break missingId;
      }

      id = R.id.pts;
      TextView pts = ViewBindings.findChildViewById(rootView, id);
      if (pts == null) {
        break missingId;
      }

      id = R.id.team;
      TextView team = ViewBindings.findChildViewById(rootView, id);
      if (team == null) {
        break missingId;
      }

      id = R.id.teamCard;
      LinearLayout teamCard = ViewBindings.findChildViewById(rootView, id);
      if (teamCard == null) {
        break missingId;
      }

      return new TeamLeagueCardBinding((CardView) rootView, gd, mp, pos, pts, team, teamCard);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
