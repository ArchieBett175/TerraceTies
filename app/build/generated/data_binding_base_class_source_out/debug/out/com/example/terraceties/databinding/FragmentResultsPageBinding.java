// Generated by view binder compiler. Do not edit!
package com.example.terraceties.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.terraceties.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentResultsPageBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout ResultsLL;

  @NonNull
  public final AppCompatButton allResults;

  @NonNull
  public final LinearLayout fixtureLayout;

  @NonNull
  public final AppCompatButton resBackButton;

  @NonNull
  public final RecyclerView resRecyclerView;

  @NonNull
  public final AppCompatButton teamResults;

  private FragmentResultsPageBinding(@NonNull RelativeLayout rootView,
      @NonNull LinearLayout ResultsLL, @NonNull AppCompatButton allResults,
      @NonNull LinearLayout fixtureLayout, @NonNull AppCompatButton resBackButton,
      @NonNull RecyclerView resRecyclerView, @NonNull AppCompatButton teamResults) {
    this.rootView = rootView;
    this.ResultsLL = ResultsLL;
    this.allResults = allResults;
    this.fixtureLayout = fixtureLayout;
    this.resBackButton = resBackButton;
    this.resRecyclerView = resRecyclerView;
    this.teamResults = teamResults;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentResultsPageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentResultsPageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_results_page, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentResultsPageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ResultsLL;
      LinearLayout ResultsLL = ViewBindings.findChildViewById(rootView, id);
      if (ResultsLL == null) {
        break missingId;
      }

      id = R.id.allResults;
      AppCompatButton allResults = ViewBindings.findChildViewById(rootView, id);
      if (allResults == null) {
        break missingId;
      }

      id = R.id.fixtureLayout;
      LinearLayout fixtureLayout = ViewBindings.findChildViewById(rootView, id);
      if (fixtureLayout == null) {
        break missingId;
      }

      id = R.id.resBackButton;
      AppCompatButton resBackButton = ViewBindings.findChildViewById(rootView, id);
      if (resBackButton == null) {
        break missingId;
      }

      id = R.id.resRecyclerView;
      RecyclerView resRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (resRecyclerView == null) {
        break missingId;
      }

      id = R.id.teamResults;
      AppCompatButton teamResults = ViewBindings.findChildViewById(rootView, id);
      if (teamResults == null) {
        break missingId;
      }

      return new FragmentResultsPageBinding((RelativeLayout) rootView, ResultsLL, allResults,
          fixtureLayout, resBackButton, resRecyclerView, teamResults);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
